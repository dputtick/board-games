- game object is a dispatcher
  - gives and takes information from players and board (should the UI/board representation be here or on board?)

- player object
  - show user guesses so far
  - get user input
  - input validation
  - sends input to game object
  - tells the user if things happen

- board object
  - stores the state of the game (ship locations, ship damage)
  - gives info to the game object
  - responds to queries from the game object (going with a response style API)
    - a ship is sunk
    - hit or miss
  - how do I want to store my board state?
    - obvious options: 2d matrix seems to make the most sense
    - alternative would be a hash of some type? but this loses the easy to reason about visual nature of a matrix
    - what info do I need at each spot in the matrix?
      - what's there? i.e. hit or miss. this will render on the players attacking board
      - what ship is a spot connected to. i need to know how many hits each ship has taken and whether they have sank
      - the user needs to know whether they have gotten hit.
    - 0 can mean empty
    - number can be a ship id
    - X can mean a guess

- list of game events
  - setup phase
    - let the players choose where their ships are
  - play phase
    - alternation of turns
    - guessing a location
    - checking for hits
    - checking for sunken ships
    - checking for win conditions


- questions
 - if I try to run this at module level, I get "can't find '__main__' module in 'battleship/'", how do I make this work?
 - how do I merge in only my changes to battleship and leave curses stuff as is? Can I merge only specific sections?
 - what are the pros and cons of a central board object?
 - where should I keep my UI/board representation?